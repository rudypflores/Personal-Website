{"ast":null,"code":"var _jsxFileName = \"/home/rudy/Desktop/Personal-Website/src/components/app-drawer/drawer.js\";\nimport React from 'react';\nimport './drawer.css';\nimport './appDrawer.css';\nimport DrawerIcon from \"../../images/drawer.svg\";\nimport HomeIcon from \"../../images/home.svg\";\nimport GithubIcon from \"../../images/github.svg\";\nimport ReturnIcon from \"../../images/return.svg\";\n\nclass Drawer extends React.Component {\n  // State for determining if the app drawer has been clicked\n  constructor(props) {\n    super(props);\n    this.state = {\n      clicked: false\n    };\n    this.handleClickDrawer = this.handleClickDrawer.bind(this);\n    this.handleClickHome = this.handleClickHome.bind(this);\n    this.handleClickReturn = this.handleClickReturn.bind(this);\n  } // This function will toggle the clicked state \n  // & play the rotation animation\n\n\n  handleClickDrawer() {\n    const drawer = document.getElementById('drawer-icon').style;\n    this.setState({\n      clicked: !this.state.clicked\n    });\n    this.props.onclickParent(drawer);\n  } // Return user to home view when clicked\n\n\n  handleClickHome() {\n    // Variable for future home button click animation\n    // const home = document.getElementById('home-icon').style;\n    this.props.onclick('home');\n  } // Return to previous view\n\n\n  handleClickReturn() {\n    this.props.onclick('projects');\n  } // Change view when an option has been selected in the menu\n\n\n  handleClickPage(npage) {\n    this.props.onclick(npage);\n    this.handleClickDrawer();\n  } // Render the app drawer when the drawer icon has been clicked\n\n\n  determineRender() {\n    if (this.props.active) {\n      return React.createElement(\"div\", {\n        id: \"drawer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        id: \"options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        onClick: this.handleClickPage.bind(this, 'home'),\n        className: \"odd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Home\"), React.createElement(\"li\", {\n        onClick: this.handleClickPage.bind(this, 'projects'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Projects\"), React.createElement(\"li\", {\n        onClick: this.handleClickPage.bind(this, 'education'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Education\"), React.createElement(\"li\", {\n        onClick: this.handleClickPage.bind(this, 'skills'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Skills\"), React.createElement(\"li\", {\n        onClick: this.handleClickPage.bind(this, 'resume'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Resume\")));\n    }\n  } // Determine whether current view should have a return button or not\n  // Return UI created but functionality yet to be done!\n\n\n  determineReturn() {\n    // Checks for all projects and adds the return button\n    for (let i = 1; i <= 4; i++) {\n      const currView = \"project-\".concat(i);\n\n      if (this.props.view === currView) {\n        return React.createElement(\"img\", {\n          src: ReturnIcon,\n          alt: \"Return to previous view icon\",\n          id: \"return-icon\",\n          onClick: this.handleClickReturn,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        });\n      }\n    } // prevent returning a return button if not within project scope\n\n\n    return null;\n  } // Render the app drawer icon, home icon, and GitHub icon\n\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"app-drawer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.determineReturn(), React.createElement(\"img\", {\n      src: HomeIcon,\n      alt: \"Return to home icon\",\n      id: \"home-icon\",\n      onClick: this.handleClickHome,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: DrawerIcon,\n      alt: \"App drawer icon\",\n      onClick: this.handleClickDrawer,\n      id: \"drawer-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"a\", {\n      href: \"https://www.github.com/rudypflores\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: GithubIcon,\n      alt: \"Github icon\",\n      id: \"github-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), this.determineRender());\n  }\n\n}\n\nexport default Drawer;","map":{"version":3,"sources":["/home/rudy/Desktop/Personal-Website/src/components/app-drawer/drawer.js"],"names":["React","Drawer","Component","constructor","props","state","clicked","handleClickDrawer","bind","handleClickHome","handleClickReturn","drawer","document","getElementById","style","setState","onclickParent","onclick","handleClickPage","npage","determineRender","active","determineReturn","i","currView","view","ReturnIcon","render","HomeIcon","DrawerIcon","GithubIcon"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport './drawer.css';\nimport './appDrawer.css';\n\nimport DrawerIcon from '../../images/drawer.svg';\nimport HomeIcon from '../../images/home.svg';\nimport GithubIcon from '../../images/github.svg';\nimport ReturnIcon from '../../images/return.svg';\n\n\nclass Drawer extends React.Component {\n\n    // State for determining if the app drawer has been clicked\n    constructor(props) {\n        super(props);\n        this.state = {\n            clicked:false,\n        };\n        this.handleClickDrawer = this.handleClickDrawer.bind(this);\n        this.handleClickHome = this.handleClickHome.bind(this);\n        this.handleClickReturn = this.handleClickReturn.bind(this);\n    }\n\n    // This function will toggle the clicked state \n    // & play the rotation animation\n    handleClickDrawer() {\n        const drawer = document.getElementById('drawer-icon').style;\n\n        this.setState({\n            clicked:!this.state.clicked,\n        });\n\n        this.props.onclickParent(drawer);\n    }\n\n    // Return user to home view when clicked\n    handleClickHome() {\n        // Variable for future home button click animation\n        // const home = document.getElementById('home-icon').style;\n        this.props.onclick('home');\n    }\n\n    // Return to previous view\n    handleClickReturn() {\n        this.props.onclick('projects');\n    }\n\n    // Change view when an option has been selected in the menu\n    handleClickPage(npage) {\n        this.props.onclick(npage);\n        this.handleClickDrawer();\n    }\n\n    // Render the app drawer when the drawer icon has been clicked\n    determineRender() {\n        if(this.props.active) {\n            return (\n                <div id=\"drawer\">\n                    <ul id=\"options\">\n                        <li onClick={this.handleClickPage.bind(this, 'home')} className=\"odd\">Home</li>\n                        <li onClick={this.handleClickPage.bind(this, 'projects')}>Projects</li>\n                        <li onClick={this.handleClickPage.bind(this, 'education')}>Education</li>\n                        <li onClick={this.handleClickPage.bind(this, 'skills')}>Skills</li>\n                        <li onClick={this.handleClickPage.bind(this, 'resume')}>Resume</li>\n                    </ul>\n                </div>\n            );\n        }\n    }\n\n    // Determine whether current view should have a return button or not\n    // Return UI created but functionality yet to be done!\n    determineReturn() {\n        // Checks for all projects and adds the return button\n        for(let i = 1; i <= 4; i++) {\n            const currView = `project-${i}`;\n            if(this.props.view === currView) {\n                return <img src={ReturnIcon} alt=\"Return to previous view icon\" id=\"return-icon\" onClick={this.handleClickReturn}/>;\n            }\n        }\n        // prevent returning a return button if not within project scope\n        return null;\n    }\n\n    // Render the app drawer icon, home icon, and GitHub icon\n    render() {\n        return (\n            <React.Fragment>\n                <div id=\"app-drawer\">\n                    <div id=\"wrapper\">\n                        {this.determineReturn()}\n                        <img src={HomeIcon} alt=\"Return to home icon\" id=\"home-icon\" onClick={this.handleClickHome}/>\n                        <img src={DrawerIcon} alt=\"App drawer icon\" onClick={this.handleClickDrawer} id=\"drawer-icon\"/>\n                    </div>\n                    <a href=\"https://www.github.com/rudypflores\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <img src={GithubIcon} alt=\"Github icon\" id=\"github-icon\"/>\n                    </a>\n                </div>\n                {this.determineRender()}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Drawer;"]},"metadata":{},"sourceType":"module"}