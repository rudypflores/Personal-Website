{"ast":null,"code":"var _jsxFileName = \"/home/rudy/Desktop/Personal-Website/Version 2.0/personal-website/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport AppDrawer from './components/app-drawer/appDrawer';\nimport ViewController from './components/view-controller/viewController';\nconst right = 'rotateRight 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)';\nconst left = 'rotateLeft 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(img) {\n    this.setState({\n      active: !this.state.active\n    });\n    img.animation = this.state.active ? right : left;\n    img.animationFillMode = 'forwards';\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(AppDrawer, {\n      onclick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(ViewController, {\n      active: this.state.active,\n      onclick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;\nlet touchstartX = 0;\nlet touchstartY = 0;\nlet touchendX = 0;\nlet touchendY = 0;\nconst gestureZone = document.getElementById('modalContent');\ngestureZone.addEventListener('touchstart', function (event) {\n  touchstartX = event.changedTouches[0].screenX;\n  touchstartY = event.changedTouches[0].screenY;\n}, false);\ngestureZone.addEventListener('touchend', function (event) {\n  touchendX = event.changedTouches[0].screenX;\n  touchendY = event.changedTouches[0].screenY;\n  handleGesture();\n}, false);\n\nfunction handleGesture() {\n  if (touchendX < touchstartX) {\n    console.log('Swiped left');\n  }\n\n  if (touchendX > touchstartX) {\n    console.log('Swiped right');\n  }\n\n  if (touchendY < touchstartY) {\n    console.log('Swiped up');\n  }\n\n  if (touchendY > touchstartY) {\n    console.log('Swiped down');\n  }\n\n  if (touchendY === touchstartY) {\n    console.log('Tap');\n  }\n}","map":{"version":3,"sources":["/home/rudy/Desktop/Personal-Website/Version 2.0/personal-website/src/App.js"],"names":["React","AppDrawer","ViewController","right","left","App","Component","constructor","props","state","active","handleClick","bind","img","setState","animation","animationFillMode","render","touchstartX","touchstartY","touchendX","touchendY","gestureZone","document","getElementById","addEventListener","event","changedTouches","screenX","screenY","handleGesture","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,cAAP,MAA2B,6CAA3B;AAGA,MAAMC,KAAK,GAAG,uDAAd;AACA,MAAMC,IAAI,GAAG,sDAAb;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAC;AADI,KAAb;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,CAACE,GAAD,EAAM;AACf,SAAKC,QAAL,CAAc;AACZJ,MAAAA,MAAM,EAAC,CAAC,KAAKD,KAAL,CAAWC;AADP,KAAd;AAGAG,IAAAA,GAAG,CAACE,SAAJ,GAAgB,KAAKN,KAAL,CAAWC,MAAX,GAAoBP,KAApB,GAA4BC,IAA5C;AACAS,IAAAA,GAAG,CAACG,iBAAJ,GAAwB,UAAxB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAE,KAAKN,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,MAAnC;AAA2C,MAAA,OAAO,EAAE,KAAKC,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AA3B+B;;AA8BlC,eAAeN,GAAf;AAEA,IAAIa,WAAW,GAAG,CAAlB;AACA,IAAIC,WAAW,GAAG,CAAlB;AACA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,SAAS,GAAG,CAAhB;AAEA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAApB;AAEAF,WAAW,CAACG,gBAAZ,CAA6B,YAA7B,EAA2C,UAASC,KAAT,EAAgB;AACvDR,EAAAA,WAAW,GAAGQ,KAAK,CAACC,cAAN,CAAqB,CAArB,EAAwBC,OAAtC;AACAT,EAAAA,WAAW,GAAGO,KAAK,CAACC,cAAN,CAAqB,CAArB,EAAwBE,OAAtC;AACH,CAHD,EAGG,KAHH;AAKAP,WAAW,CAACG,gBAAZ,CAA6B,UAA7B,EAAyC,UAASC,KAAT,EAAgB;AACrDN,EAAAA,SAAS,GAAGM,KAAK,CAACC,cAAN,CAAqB,CAArB,EAAwBC,OAApC;AACAP,EAAAA,SAAS,GAAGK,KAAK,CAACC,cAAN,CAAqB,CAArB,EAAwBE,OAApC;AACAC,EAAAA,aAAa;AAChB,CAJD,EAIG,KAJH;;AAMA,SAASA,aAAT,GAAyB;AACrB,MAAIV,SAAS,GAAGF,WAAhB,EAA6B;AACzBa,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;;AAED,MAAIZ,SAAS,GAAGF,WAAhB,EAA6B;AACzBa,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;;AAED,MAAIX,SAAS,GAAGF,WAAhB,EAA6B;AACzBY,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;;AAED,MAAIX,SAAS,GAAGF,WAAhB,EAA6B;AAC1BY,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACF;;AAED,MAAIX,SAAS,KAAKF,WAAlB,EAA+B;AAC5BY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACF;AACJ","sourcesContent":["import React from 'react';\nimport './App.css';\nimport AppDrawer from './components/app-drawer/appDrawer';\nimport ViewController from './components/view-controller/viewController';\n\n\nconst right = 'rotateRight 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)';\nconst left = 'rotateLeft 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      active:false, \n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(img) {\n    this.setState({\n      active:!this.state.active,\n    });\n    img.animation = this.state.active ? right : left;\n    img.animationFillMode = 'forwards';\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {/* App Drawer */}\n        <AppDrawer onclick={this.handleClick}/>\n        {/* render the current view */}\n        <ViewController active={this.state.active} onclick={this.handleClick}/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n\nlet touchstartX = 0;\nlet touchstartY = 0;\nlet touchendX = 0;\nlet touchendY = 0;\n\nconst gestureZone = document.getElementById('modalContent');\n\ngestureZone.addEventListener('touchstart', function(event) {\n    touchstartX = event.changedTouches[0].screenX;\n    touchstartY = event.changedTouches[0].screenY;\n}, false);\n\ngestureZone.addEventListener('touchend', function(event) {\n    touchendX = event.changedTouches[0].screenX;\n    touchendY = event.changedTouches[0].screenY;\n    handleGesture();\n}, false); \n\nfunction handleGesture() {\n    if (touchendX < touchstartX) {\n        console.log('Swiped left');\n    }\n    \n    if (touchendX > touchstartX) {\n        console.log('Swiped right');\n    }\n    \n    if (touchendY < touchstartY) {\n        console.log('Swiped up');\n    }\n    \n    if (touchendY > touchstartY) {\n       console.log('Swiped down');\n    }\n    \n    if (touchendY === touchstartY) {\n       console.log('Tap');\n    }\n}"]},"metadata":{},"sourceType":"module"}