{"ast":null,"code":"var _jsxFileName = \"/home/rudy/Desktop/Personal-Website/Version 2.0/personal-website/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport AppDrawer from './components/app-drawer/appDrawer';\nimport ViewController from './components/view-controller/viewController';\nconst right = 'rotateRight 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)';\nconst left = 'rotateLeft 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    let touchstartX = 0;\n    let touchstartY = 0;\n    let touchendX = 0;\n    let touchendY = 0;\n    let action = false;\n    const gestureZone = document.getElementById('App');\n    gestureZone.addEventListener('touchstart', function (event) {\n      touchstartX = event.changedTouches[0].screenX;\n      touchstartY = event.changedTouches[0].screenY;\n    }, false);\n    gestureZone.addEventListener('touchend', function (event) {\n      touchendX = event.changedTouches[0].screenX;\n      touchendY = event.changedTouches[0].screenY;\n      handleGesture();\n    }, false);\n\n    function handleGesture() {\n      if (touchendX < touchstartX) {\n        console.log('Swiped left');\n      }\n\n      if (touchendX > touchstartX) {\n        console.log('Swiped right');\n        action = !action;\n      }\n\n      if (touchendY < touchstartY) {\n        console.log('Swiped up');\n      }\n\n      if (touchendY > touchstartY) {\n        console.log('Swiped down');\n      }\n\n      if (touchendY === touchstartY) {\n        console.log('Tap');\n      }\n    }\n\n    if (action) {\n      this.setState({\n        active: true\n      });\n    }\n  }\n\n  handleClick(img) {\n    this.setState({\n      active: !this.state.active\n    });\n    img.animation = this.state.active ? right : left;\n    img.animationFillMode = 'forwards';\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(AppDrawer, {\n      onclick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(ViewController, {\n      active: this.state.active,\n      onclick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/rudy/Desktop/Personal-Website/Version 2.0/personal-website/src/App.js"],"names":["React","AppDrawer","ViewController","right","left","App","Component","constructor","props","state","active","handleClick","bind","componentDidMount","touchstartX","touchstartY","touchendX","touchendY","action","gestureZone","document","getElementById","addEventListener","event","changedTouches","screenX","screenY","handleGesture","console","log","setState","img","animation","animationFillMode","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport AppDrawer from './components/app-drawer/appDrawer';\nimport ViewController from './components/view-controller/viewController';\n\n\nconst right = 'rotateRight 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)';\nconst left = 'rotateLeft 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      active:false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    let touchstartX = 0;\n    let touchstartY = 0;\n    let touchendX = 0;\n    let touchendY = 0;\n    let action = false;\n\n    const gestureZone = document.getElementById('App');\n\n    gestureZone.addEventListener('touchstart', function(event) {\n        touchstartX = event.changedTouches[0].screenX;\n        touchstartY = event.changedTouches[0].screenY;\n    }, false);\n\n    gestureZone.addEventListener('touchend', function(event) {\n        touchendX = event.changedTouches[0].screenX;\n        touchendY = event.changedTouches[0].screenY;\n        handleGesture();\n    }, false); \n\n    function handleGesture() {\n        if (touchendX < touchstartX) {\n            console.log('Swiped left');\n        }\n        \n        if (touchendX > touchstartX) {\n            console.log('Swiped right');\n            action = !action;\n        }\n        \n        if (touchendY < touchstartY) {\n            console.log('Swiped up');\n        }\n        \n        if (touchendY > touchstartY) {\n          console.log('Swiped down');\n        }\n        \n        if (touchendY === touchstartY) {\n          console.log('Tap');\n        }\n    }\n\n    if(action) {\n      this.setState({active:true,});\n    }\n  }\n\n  handleClick(img) {\n    this.setState({\n      active:!this.state.active,\n    });\n    img.animation = this.state.active ? right : left;\n    img.animationFillMode = 'forwards';\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {/* App Drawer */}\n        <AppDrawer onclick={this.handleClick}/>\n        {/* render the current view */}\n        <ViewController active={this.state.active} onclick={this.handleClick}/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}