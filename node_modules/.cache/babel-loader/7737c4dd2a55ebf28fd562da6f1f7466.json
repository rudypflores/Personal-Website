{"ast":null,"code":"var _jsxFileName = \"/home/rudy/Desktop/Personal-Website/Version 2.0/personal-website/src/components/app-drawer/appDrawer.js\";\nimport React from 'react';\nimport './appDrawer.css';\nimport Drawer from '../../images/drawer.png';\n\nclass AppDrawer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  } //This function will toggle the active state \n  //& play the rotation animation\n\n\n  handleClick() {\n    this.setState({\n      active: !this.state.active\n    });\n    const drawer = document.getElementById('drawer').style;\n\n    if (this.state.active) {\n      drawer.animation = 'rotateRight 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)';\n      drawer.animationFillMode = 'forwards';\n    } else {\n      drawer.animation = 'rotateLeft 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)';\n      drawer.animationFillMode = 'forwards';\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"app-drawer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.displayDrawer(), React.createElement(\"img\", {\n      src: Drawer,\n      alt: \"App drawer icon\",\n      onClick: this.handleClick,\n      id: \"drawer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default AppDrawer;","map":{"version":3,"sources":["/home/rudy/Desktop/Personal-Website/Version 2.0/personal-website/src/components/app-drawer/appDrawer.js"],"names":["React","Drawer","AppDrawer","Component","constructor","props","state","active","handleClick","bind","setState","drawer","document","getElementById","style","animation","animationFillMode","render","displayDrawer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAGA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH,GARmC,CAUpC;AACA;;;AACAD,EAAAA,WAAW,GAAG;AACV,SAAKE,QAAL,CAAc;AACVH,MAAAA,MAAM,EAAC,CAAC,KAAKD,KAAL,CAAWC;AADT,KAAd;AAIA,UAAMI,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAjD;;AAEA,QAAG,KAAKR,KAAL,CAAWC,MAAd,EAAsB;AAClBI,MAAAA,MAAM,CAACI,SAAP,GAAmB,uDAAnB;AACAJ,MAAAA,MAAM,CAACK,iBAAP,GAA2B,UAA3B;AACH,KAHD,MAGO;AACHL,MAAAA,MAAM,CAACI,SAAP,GAAmB,sDAAnB;AACAJ,MAAAA,MAAM,CAACK,iBAAP,GAA2B,UAA3B;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,aAAL,EADL,EAEI;AAAK,MAAA,GAAG,EAAEjB,MAAV;AAAkB,MAAA,GAAG,EAAC,iBAAtB;AAAwC,MAAA,OAAO,EAAE,KAAKO,WAAtD;AAAmE,MAAA,EAAE,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAnCmC;;AAsCxC,eAAeN,SAAf","sourcesContent":["import React from 'react';\nimport './appDrawer.css';\nimport Drawer from '../../images/drawer.png';\n\n\nclass AppDrawer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: false,\n        }\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    //This function will toggle the active state \n    //& play the rotation animation\n    handleClick() {\n        this.setState({\n            active:!this.state.active,\n        });\n\n        const drawer = document.getElementById('drawer').style;\n\n        if(this.state.active) {\n            drawer.animation = 'rotateRight 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)'; \n            drawer.animationFillMode = 'forwards';\n        } else {\n            drawer.animation = 'rotateLeft 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94)';\n            drawer.animationFillMode = 'forwards';\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"app-drawer\">\n                {this.displayDrawer()}\n                <img src={Drawer} alt=\"App drawer icon\" onClick={this.handleClick} id=\"drawer\"/>\n            </div>\n        );\n    }\n}\n\nexport default AppDrawer;"]},"metadata":{},"sourceType":"module"}